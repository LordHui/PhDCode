clear all;
close all;

M = 300;
Ks = [5, 10, 15, 20, 30, 50, 100, 150, 200, 250, 300];

X_all = zeros(length(Ks), 100);
Y_all = zeros(length(Ks), 100);



for pp=1:length(Ks)
    K = Ks(pp);
    
    edges = [50, 120, 170, 192, 220, 234, 256, 300] ;
    levels = [1,  0 , 1, 0, 0, 1, 0, 0];
    idxs = zeros(1, M)  ;
    idxs(edges(1: end-1)+1) = 1 ;
    g = levels(cumsum(idxs)+1) ;
    
    edges = [50, 120, 170, 192, 220, 234, 256, 300] ;
    levels = [1,  0 , 1, 0, 0, 0, 0, 0];
    idxs = zeros(1, M)  ;
    idxs(edges(1: end-1)+1) = 1 ;
    gstar = levels(cumsum(idxs)+1) ;
    
    Fn = LehmerMatrix(M);
    [Ln, U] = lu(Fn);
    I = eye(M);
    D = inv(Ln);
    Ft = LehmerMatrix(3);
    [Lt Ut] = lu(Ft);
    Dt = inv(Lt);
    
    F = kron(Ft, Fn);
    L = kron(Lt, Ln);
    It = eye(3);
    
    G = [g' ; g' ; gstar']';
    gt = vec(G);
    
    gt_noisy = gt + 0.5*randn(1,900)';
    
    snr = 20*log10(norm(gt)/norm(randn(1,900)));
    
    h = cumsum(g)';
    runs = 10 ;
    
    pvals = [0.01, 0.05, 0.1, 0.2, 0.25, 0.3,  0.5, 0.75, 0.8, 0.9, 0.99];
    tprs = zeros(runs, length(pvals));
    fprs = zeros(runs, length(pvals));
    scores = zeros(length(Ks), 900);
    
    for run = 1:runs
        for rr=1:length(pvals)
            A = normrnd(0, 1/(K), [K, M]);
            A = kron(It, A);
            y = A*gt_noisy;
            
            [m, n] = size(L);
            direct_templates = zeros(m,3*K);
            c = zeros(1, m);
            
            for k=1:m
                direct_templates(k, :) = A*L(k, :)';
                c(k) = 3*K*(y'*direct_templates(k,:)');
            end
            
            class = zeros(1, M);
            miss_class = zeros(1, M);
            
            ghat = L\c';
            ahat = F\c';
            thresh = 0.2*max(ghat);
            
            % Find k biggest values of ahat
            
            [sorted_ahat, inds] = sort(abs(ahat), 'descend');
            
            num_change_points = 65;
            
            ahat_big = inds(1:num_change_points);
            
            for ii = 1:M
                if ismember(ii, ahat_big);
                    ii;
                else
                    ahat(ii) = 0;
                end
            end
            
            % take the average of ghat between these vaules
            piece_mean = zeros(1, num_change_points);
            piece_var = zeros(1,num_change_points);
            threshths = zeros(1,num_change_points);
            inds = [1, ahat_big', 900];
            inds = sort(inds);
            piece_ttests = zeros(1, num_change_points);
            ps = zeros(1, num_change_points);
            
            for l=1:num_change_points
                piece = ghat(inds(l):inds(l+1))';
                piece_mean(l) = mean(piece);
                piece_var(l) = var(piece,1);
                threshths(l) = (1.96*piece_var(l))/sqrt(length(piece));
                [piece_ttests(l), ps(l)] = ttest(piece, 0, 'Tail', 'right', 'Alpha', pvals(rr));
            end
            
            estimate = zeros(1, m);
            threshest = zeros(1, m);
            
            for ii=1:num_change_points
                for jj = inds(ii):inds(ii+1)
                    if piece_ttests(ii) == 1
                        estimate(jj) = 1; %piece_mean(ii);
                    else
                        estimate(jj) = 0;
                    end
                end
            end
            
            tpr = 0;
            fpr = 0;
            
            for kk=1:m
                if estimate(kk) == 1 && gt(kk) == 1
                    tpr = tpr + 1;
                end
                if estimate(kk) == 1 && gt(kk) == 0
                    fpr = fpr + 1;
                end
                if estimate(kk) == gt(kk)
                    scores(pp,kk) = scores(pp,kk) + 1;
                end
            end
            
            num_ones = nnz(gt);
            num_zero = M-num_ones;
            tprs(run, rr) = tpr/num_ones;
            fprs(run, rr) = fpr/num_zero;
        end
    end

 
[X, Y, T, auc] = perfcurve(gt, scores(pp,:), 1);

l_new = length(X);

figure
plot(X,Y)
xlabel('fprs')
ylabel('tprs')
title(strcat(strcat('ROC curve m=', strcat(num2str(Ks(pp)), ' auc ='), num2str(auc))))

if l_new < 100
    num_pads = 100 - l_new
    X = padarray(X, num_pads, NaN, 'post');
    Y = padarray(Y, num_pads, NaN, 'post');
else
    num_pads = l_new - 100
    X_all = padarray(X_all, abs(num_pads), NaN, 'post');
    Y_all = padarray(Y_all, abs(num_pads), NaN, 'post');
end
X_all(pp,:) = X;
Y_all(pp,:) = Y;

end
plot(X_all,Y_all);
%plot(1:n, estimate, 'r', 1:n, gt, 'b')
%ylim([0,500])